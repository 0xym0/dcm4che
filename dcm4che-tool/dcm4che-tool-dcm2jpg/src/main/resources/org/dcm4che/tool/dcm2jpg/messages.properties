usage=dcm2jpg [<options>] <dicom-file> <jpegfile>\n\
or dcm2jpg [Options] <dcmfile>... <outdir>\n\
or dcm2jpg [Options] <indir>... <outdir>
try=Try `dcm2jpg --help' for more information.
description=\n\
Convert DICOM image(s) to JPEG(s) or other image formats\n\-\n\
Options:
example=dcm2jpg img.dcm img.jpg\n\
Convert DICOM image: img.dcm to JPEG image: img.jpg
frame=frame to convert, 1 (= first frame) by default
format=output image format, JPEG by default
lsformats=list supported output image formats 
suffix=file extension used with destination directory argument,\
lower case format name by default
quality=compression quality (0.0-1.0) of output image
encoder=ImageWriter class to be used for encoding, \n\
choose the first Image Writer found for given image format by default
lsencoders=list available Image Writers for specified output image format
compression=Compression Type of Image Writer to be used
ps=file path of presentation state to apply
windowCenter=Window Center of linear VOI LUT function to apply
windowWidth=Window Width of linear VOI LUT function to apply
noauto=disable auto-windowing for images w/o VOI attributes
pv2gray=file path of P-Value to gray value map
writers=Supported Image Writers for format: {0}
writer=\n{0}:\
\n   canWriteCompressed: {1}\
\n  canWriteProgressive: {2}\
\n        canWriteTiles: {3}\
\n       canOffsetTiles: {4}\
\n    Compression Types: {5}
formats=Supported output image formats: {0}
missing=missing file operand
nodestdir=target {0} is not a directory
formatNotSupported=output image format: {0} not supported
noSuchImageWriter=no Image Writer: {0} for format {1} found
converted={0} -> {1}
failed=Failed to convert {0}: {1}
