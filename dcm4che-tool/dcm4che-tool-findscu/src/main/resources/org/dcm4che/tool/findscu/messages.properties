usage=findscu [options] -{CHMOPSUW} -c <aet>@<host>:<port>
try=Try `findscu --help' for more information.
description=\n\
The findscu application implements a Service Class User (SCU) for the \
Query/Retrieve, the Modality Worklist Management, the Unified Worklist and \
Procedure Step, the Hanging Protocol Query/Retrieve and the Color Palette \
Query/Retrieve Service Class. findscu only supports query functionality using \
the C-FIND message. It sends  query keys to an Service Class Provider (SCP) \
and waits for responses. The application can be used to query SCPs of the \
Query/Retrieve, the Modality Worklist Management, the Unified Worklist and \
Procedure Step, the Hanging Protocol Query/Retrieve and the Color Palette \
Query/Retrieve Service Class.
example=-\n\
Examples:\n\
$ findscu -c FINDSCP@localhost:11112 -S -L STUDY -m PatientName=Doe^John \
-m StudyDate=20110510- -m ModalitiesInStudy=CT \
--out-form {StudyDate}:{StudyInstanceUID}:{NumberOfStudyRelatedInstances} \
 -o result.txt\n\
Query Query/Retrieve Service Class Provider FINDSCP listening on local port \
11112 for CT Studies for Patient John Doe since 2011-05-10 and write \
Study Date, Study Instance UID and the number Instance of matching Studies \
to file result.txt
missing=you must specify one of the -CHMOPSUW options
missing-level=you must specify the query level by option -L with option {0}
invalid-level=you must not specify a query level by option -L with options {0}
level=specifies query level. Required for options -OPS.
patient-root=use patient root information model
study-root=use study root information model
patient-study-only=use patient/study only information model
mwl=use modality worklist information model
ups-pull=use Unified Procedure Step Push service
ups-watch=use Unified Procedure Step Watch service
hanging-protocol=use hanging protocol information model
color-palette=use color palette information model
explicit-vr=propose all uncompressed TS, explicit VR little endian first \
(default: implicit VR little endian first)
big-endian=propose all uncompressed TS, explicit VR big endian first \
(default: implicit VR little endian first)
implicit-vr=propose only implicit VR little endian \
(default: all uncompressed TS)
match=specify matching key. attr can be specified by keyword or tag value \
(in hex), e.g. PatientName or 00100010. Attributes in nested Datasets can be \
specified by including the keyword/tag value of the sequence attribute, \
e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request \
Attributes Sequence
return=specify return key. key can be specified by keyword or tag value \
(in hex), e.g. NumberOfStudyRelatedSeries or 00201206.
cancel=cancel the query request after the receive of the specified number of \
matches.
o-file=store attributes of received matches specified by option --out-form \
into <file>; by default write to standard output
out-form=specifies format string with attributes of received matches to be \
written to the output file specified by option -o. Attributes are specified \
by its keyword or tag value (in hex) in {}, e.g.: {PatientName} or {00100010}. \
Attributes in nested Datasets can be specified by including the keyword/tag \
value of the sequence attribute, e.g.: {ConceptNameCodeSequence/CodeMeaning}
relational=negotiate relational-query support
datetime=negotiate combined date and time range matching
fuzzy=negotiate fuzzy semantic person name attribute matching
timezone=negotiate timezone adjustment of queries

